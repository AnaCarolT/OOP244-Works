/*///////////////////////////////////////////////////////////////////////////
Full name: Ana Caroline Campos Tirolli
Student ID#:122476229
Email: acampos-tirolli@myseneca.ca
Date: 2023-07-27

///////////////////////////////////////////////////////////////////////////*/

In this workshop we used inheritance, but we focused on the polymorphism, virtual + functions and abstract classes. First, we started with the shape that starts with one destructor, two member functions and 2 helper functions. The codes were not implemented for the destructor and the member functions and the member functions were set as an abstract class by setting it to “= 0”, but since it will be a parent class, we set everything in the class as virtual, independent oh what we are going to do, it’s always important to set the destructor as virtual, reminder the helper functions were implemented so it can be called by the derived classes. We will have the following hierarchy according to the graphic Shape->LblShape->(Line, Rectangle), as we finished the shape, we proceed to the Lblshape, this one had 2 constructors, one detructor, the getSpecs was repeated and we don’t need to repeat the helper function because the parent has the necessary helper functions. Everything on this derived class went smoothly except for the getSpecs, I tried to work with the type string but it was giving me stack overflow multiple times in the label so I decide to assume that the label is not going to pass the 500 characters, check if it was empty, then getting the label I needed, used ignore to clean everything then properly allocated to the exact size of the label using strlen, a fun fact is that my code was working, I was only aware of the stack overflow when I reached the matrix, so now I’m aware that even though the code finishes I always need to check the return, instead of returning 0, it was returning a long negative number. I spent hours trying to fix it then I thought it was my visual studio then I tried in another computer, then the code started aborting instead of going until the end, I kept trying using string but I recognize I need better struct for it before working with it because I used a lot of my time to get my code working, once I fixed the getspecs everything started working  normally, output wise everything was exactly the same. It took me a long while to recognize that the problem was when I was allocating space. I kept going back and forth, reading and re-reading the instructions. Proceeding to the line and rectangle by following the instructions everything went as expected since the instructions were very explicit of what should be done, something that caught my attention is that neither had a destructor so that got me concerned at first but since we are using virtual for the constructor it can use the one from their parent’s. Everything else had no mystery since the instructions even tell you the conditions for the if or what you should be printing and which format.